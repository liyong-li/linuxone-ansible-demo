---
- name: Get the volume name in svc
  ibm.spectrum_virtualize.ibm_svcinfo_command:
    command: "svcinfo lshostvdiskmap -delim : {{item.host}} "
    clustername: "{{clustername}}"
    username: "{{username}}"
    password: "{{password}}"
    log_path: /tmp/playbook.debug
  register: svcinfo_cmd_output

- name: get the volume name tmp
  set_fact:
     vol_name_tmp: "{{svcinfo_cmd_output.stdout}}" 

- name: get the volume name in shell
  shell: echo {{vol_name_tmp}} | grep -i {{item.wwid}} | awk '{print $5}' 
  register: vol_name_output 

- name: get the volume name
  set_fact: 
     vol_name: vol_name_output.stdout

- name: scsi rescan on fcp ports
  delegate_to: "{{vol_owner}}"
  shell: multipath -ll | grep -i {{item.wwid}} | awk '{print $1}'
  register: vol1

- name: find out the device id
  delegate_to: "{{vol_owner}}"
  shell: multipath -ll /dev/mapper/{{vol1.stdout}} | grep -i 'sd' | grep -i ':' | sed -e 's/.*-\(.*\)sd.*/\1/' | awk '{$1=$1};1'
  register: dev1

- debug: var=dev1.stdout_lines

- name: remove spaces
  set_fact: 
    dev2: "{{ dev1.stdout_lines|select() }}"

- name: remove the vol from vm
  delegate_to: "{{vol_owner}}"
  shell: echo 1 > /sys/bus/scsi/devices/{{sub_item}}/delete
  with_items: "{{dev2}}"
  register: remove_output
  loop_control: 
    loop_var: sub_item

- name: Unmap a volume from a host
  ibm.spectrum_virtualize.ibm_svc_vol_map:
    clustername: "{{clustername}}"
    domain: "{{domain}}"
    username: "{{username}}"
    password: "{{password}}"
    log_path: /tmp/playbook.debug
    volname: "{{vol_name}}"
    host: "{{item.host}}"
    state: absent


- name: Run svcinfo CLI command using SSH client with password
  ibm.spectrum_virtualize.ibm_svcinfo_command:
    command: "svcinfo lsvdisk -delim : {{item.volname}}"
    clustername: "{{clustername}}"
    username: "{{username}}"
    password: "{{password}}"
    log_path: /tmp/playbook.debug
  register: svcinfo_cmd_output

- name: get the volume wwid tmp
  set_fact:
     vol_wwid_tmp: "{{svcinfo_cmd_output.stdout}}"

- name: get the volume wwid
  set_fact:
     vol_wwid: "{{vol_wwid_tmp[0].vdisk_UID}}"

- debug: var=vol_wwid


- name: get the volume name
  set_fact:
     vol_name: "{{vol_wwid_tmp[0].name}}"

- debug: var=vol_name

- name: Delete a volume
  ibm.spectrum_virtualize.ibm_svc_manage_volume:
    clustername: "{{ clustername }}"
    domain: "{{ domain }}"
    username: "{{ username }}"
    password: "{{ password }}"
    log_path: /tmp/playbook.debug
    name: "{{vol_name}}"
    state: "absent"
